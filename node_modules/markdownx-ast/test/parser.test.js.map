{"version":3,"sources":["webpack:///webpack/bootstrap 23c3da873bb2d0208b16","webpack:///./parser.test.ts","webpack:///external \"chai\"","webpack:///./parseXMLHeredoc.ts","webpack:///external \"glob\"","webpack:///./~/nolang/os.ts","webpack:///external \"fs\"","webpack:///./~/nolang/io.ts","webpack:///external \"string_decoder\"","webpack:///external \"path\"","webpack:///./parser.ts","webpack:///external \"marked\"","webpack:///./utils.ts","webpack:///external \"lodash\"","webpack:///./ast.ts","webpack:///./token.ts","webpack:///./inline.ts"],"names":[],"mappings":"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","file":"parser.test.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/build/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 23c3da873bb2d0208b16\n **/","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator.throw(value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments)).next());\n    });\n};\nconst chai_1 = require(\"chai\");\nconst glob = require(\"glob\");\nconst os = require(\"nolang/os\");\nconst io = require(\"nolang/io\");\nconst path = require(\"path\");\nconst parser_1 = require(\"./parser\");\nfunction checkError(err) {\n    if (err) {\n        throw err;\n    }\n}\nfunction checkResult(file, test) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var [r, err] = yield os.Open(file);\n        checkError(err);\n        var [src, err] = yield io.ReadFull(r);\n        checkError(err);\n        var tree = parser_1.parse(src);\n        var [r, err] = yield os.Open(file + \".json\");\n        checkError(err);\n        var [resultJSON, err] = yield io.ReadFull(r);\n        checkError(err);\n        let result = JSON.parse(resultJSON);\n        test(tree, result);\n    });\n}\nconst examples = glob.sync(\"./examples/*.md\");\ndescribe(\"parser\", () => {\n    examples.forEach(example => {\n        it(`parses ${path.basename(example)}`, () => {\n            return checkResult(example, chai_1.assert.deepEqual);\n        });\n    });\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./parser.test.ts\n **/","module.exports = require(\"chai\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"chai\"\n ** module id = 1\n ** module chunks = 0 1\n **/","// Adapted from http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n// Also see: http://ejohn.org/blog/pure-javascript-html-parser/\n\"use strict\";\nexports.startTagRE = /^<([-A-Za-z0-9_]+)((?:\\s+\\w+(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*)\\s*(\\/?)>/;\nconst endTagRE = /^<\\/([-A-Za-z0-9_]+)[^>]*>/;\nconst attrRE = /([-A-Za-z0-9_]+)(?:\\s*=\\s*(?:(?:\"((?:\\\\.|[^\"])*)\")|(?:'((?:\\\\.|[^'])*)')|([^>\\s]+)))?/g;\nfunction parseXMLHeredoc(input) {\n    let raw;\n    let remainder = \"\";\n    const matches = input.match(exports.startTagRE);\n    if (!matches) {\n        return;\n    }\n    raw = matches[0];\n    // console.log(matches);\n    const tagName = matches[1];\n    const tagAttributesString = matches[2] || \"\";\n    const isSelfClosing = matches[3] === '/';\n    let content;\n    if (!isSelfClosing) {\n        const closeTag = `</${tagName}>`;\n        const end = input.lastIndexOf(closeTag);\n        content = input.slice(matches[0].length, end);\n        raw += content + closeTag;\n        remainder = input.substring(end + closeTag.length);\n    }\n    else {\n        remainder = input.substring(matches[0].length);\n    }\n    const attrs = parseAttributes(tagAttributesString);\n    const xml = {\n        tag: tagName,\n        attrs: attrs,\n        content: content,\n        raw: raw,\n    };\n    return [xml, remainder];\n}\nexports.parseXMLHeredoc = parseXMLHeredoc;\nfunction parseAttributes(input) {\n    const attrs = {};\n    input.replace(attrRE, function (a0, a1, a2, a3) {\n        const key = a1;\n        let value = a2 || a3 || true;\n        attrs[key] = value;\n        return \"\";\n    });\n    return attrs;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./parseXMLHeredoc.ts\n **/","module.exports = require(\"glob\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"glob\"\n ** module id = 3\n ** module chunks = 1\n **/","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator.throw(value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments)).next());\n    });\n};\nconst fs = require(\"fs\");\n// import * as stream from \"stream\";\nconst io = require(\"./io\");\nfunction waitFSOpen(stream) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise(done => {\n            function onError(err) {\n                done(err);\n            }\n            stream.once(\"error\", onError);\n            stream.once(\"open\", () => {\n                stream.removeListener(\"error\", onError);\n                done(null);\n            });\n        });\n    });\n}\nfunction Open(file, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const stream = fs.createReadStream(file, options);\n        const err = yield waitFSOpen(stream);\n        return [new io.StreamReader(stream), err];\n    });\n}\nexports.Open = Open;\n// Create creates the named file with mode 0666 (before umask), truncating it if it already exists.\nfunction Create(file, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const stream = fs.createWriteStream(file, options);\n        const err = yield waitFSOpen(stream);\n        return [new io.StreamWriter(stream), err];\n    });\n}\nexports.Create = Create;\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/nolang/os.ts\n **/","module.exports = require(\"fs\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"fs\"\n ** module id = 5\n ** module chunks = 1\n **/","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator.throw(value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments)).next());\n    });\n};\nexports.EOF = new Error(\"EOF\");\n// interface Closer {\n//   Close(): Promise<error>;\n// }\n// Not knowing whether it's going to return Buffer or string is annoying...\n// Use buffer by default. wth.\n// You know what? this is pretty insane. I wonder if I could simply interface with the native read stream.\nclass StreamReader {\n    constructor(stream) {\n        this.currentReadResolve = null;\n        this.currentRead = null;\n        this.closed = false;\n        this.err = null;\n        // throw a hissy fit if an encoding is used...\n        this.stream = stream;\n        this.stream.on(\"readable\", () => __awaiter(this, void 0, void 0, function* () {\n            // should only try to read where Read is called..\n            yield this.pendingRead;\n            const chunk = this.stream.read();\n            // console.log(\"stream.read\",chunk);\n            if (chunk == null) {\n                // Not enough data. Wait for next readable event.\n                // We also get null for EOF. In which case, let `end` event resolve to read.\n                return;\n            }\n            // read -> chunk\n            // read -> null\n            // stream -> end\n            this.resolveRead(chunk, null);\n        }));\n        this.stream.on(\"error\", (err) => {\n            // console.log(\"stream error\",err);\n            this.err = err;\n            this.resolveRead(null, err);\n        });\n        this.stream.on(\"end\", () => {\n            // console.log(\"stream end\");\n            this.closed = true;\n            this.resolveRead(null, exports.EOF);\n        });\n        this.createPendingRead();\n    }\n    resolveRead(chunk, error) {\n        // debugger;\n        if (this.currentRead == null) {\n            return;\n        }\n        this.currentRead = null;\n        let resolve = this.currentReadResolve;\n        resolve([chunk, error]);\n        if (!this.closed) {\n            this.createPendingRead();\n        }\n    }\n    createPendingRead() {\n        this.pendingRead = new Promise(resolve => {\n            this.pendingReadResolve = resolve;\n        });\n    }\n    triggerPendingRead() {\n        this.pendingReadResolve();\n    }\n    Read() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let readPromise = new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                // Serialize reads\n                while (true) {\n                    if (this.currentRead == null) {\n                        break;\n                    }\n                    yield this.currentRead;\n                }\n                if (this.closed) {\n                    resolve([null, exports.EOF]);\n                    return;\n                }\n                if (this.err) {\n                    resolve([null, this.err]);\n                    return;\n                }\n                // ensure that we capture readPromise after it's set...\n                process.nextTick(() => {\n                    // debugger;\n                    this.currentRead = readPromise;\n                    this.currentReadResolve = resolve;\n                    this.triggerPendingRead();\n                });\n            }));\n            return readPromise;\n        });\n    }\n}\nexports.StreamReader = StreamReader;\nclass StreamWriter {\n    constructor(stream) {\n        this.closed = false;\n        this.err = null;\n        // throw a hissy fit if an encoding is used...\n        this.stream = stream;\n        this.stream.on(\"finish\", () => {\n            this.closed = true;\n        });\n        this.stream.on(\"error\", (Err) => {\n            this.err = Err;\n        });\n    }\n    Write(chunk) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.err || this.closed) {\n                return;\n            }\n            return new Promise(done => {\n                this.stream.write(chunk, () => {\n                    // This callback will be called regardless of success or error.\n                    // The error callback is guranteed to be called before the write callback (looking at stream.Writable's code).\n                    done(this.err);\n                });\n            });\n        });\n    }\n    Close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.closed) {\n                return;\n            }\n            if (this.err) {\n                return this.err;\n            }\n            return new Promise(resolve => {\n                this.stream.once(\"finish\", () => {\n                    resolve(this.err);\n                });\n            });\n        });\n    }\n}\nexports.StreamWriter = StreamWriter;\nclass StreamReadWriteCloser {\n    constructor(stream) {\n        this.w = new StreamWriter(stream);\n        this.r = new StreamReader(stream);\n    }\n    Write(chunk) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.w.Write(chunk);\n        });\n    }\n    Read() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.r.Read();\n        });\n    }\n    Close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.w.Close();\n        });\n    }\n}\nexports.StreamReadWriteCloser = StreamReadWriteCloser;\nconst string_decoder_1 = require(\"string_decoder\");\nfunction ReadFull(r, encoding = \"utf8\") {\n    return __awaiter(this, void 0, void 0, function* () {\n        let all = \"\";\n        // let all = new Buffer();\n        let decoder = new string_decoder_1.StringDecoder(encoding);\n        while (true) {\n            let [chunk, err] = yield r.Read();\n            // console.log(\"chunk\", chunk, err);\n            if (err === exports.EOF) {\n                break;\n            }\n            if (err) {\n                return [\"\", err];\n            }\n            all += decoder.write(chunk);\n        }\n        // console.log(\"done read all\");\n        // end method not in node.d.ts\n        all += decoder.end();\n        return [all, null];\n    });\n}\nexports.ReadFull = ReadFull;\n// function SplitBytes() {\n// }\n// class BufferSplitter {\n// }\n// class StringSplitter {\n//   private buf: string = \"\";\n//   private r: Reader;\n//   private decoder: NodeStringDecoder;\n//   //\n//   constructor(r: Reader, encoding = \"utf8\") {\n//     this.r = r;\n//     this.decoder = new StringDecoder(encoding);\n//   }\n//   async Next(delimiter: RegExp): Promise<[string,error]> {\n//     while(true) {\n//       if(this.buf == \"\") {\n//         let [chunk,err] = await this.r.Read();\n//         this.buf += this.decoder.write(chunk);\n//       }\n//     }\n//     let start = piece.indexOf(delimiter);\n//     if(start != -1) {\n//       let end = start + delimiter.length;\n//       let beforeDelimiter = piece.slice(0,start);\n//       let afterDelimiter = piece.slice(end);\n//       let\n//     }\n//   }\n// }\n// async () => {\n//   let splitter = r.Split(\"\\n\")\n//   await splitter.Next();\n//   await splitter.Each(line => {\n//   });\n//   let lines = await splitter.Map(line => {\n//   });\n//   // for(let line of ) {\n//   //   let line = await line;\n//   // }\n// }\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/nolang/io.ts\n **/","module.exports = require(\"string_decoder\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"string_decoder\"\n ** module id = 7\n ** module chunks = 1\n **/","module.exports = require(\"path\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"path\"\n ** module id = 8\n ** module chunks = 1\n **/","// let sectionize = require(\"./sectionize\");\n\"use strict\";\nlet { lexer } = require(\"marked\");\nlet { makeEnsureUnique } = require(\"./utils\");\nconst ast = require(\"./ast\");\nconst tk = require(\"./token\");\nconst inline_1 = require(\"./inline\");\nconst { NodeTypes } = ast;\nconst parseXMLHeredoc_1 = require(\"./parseXMLHeredoc\");\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = parse;\nfunction parse(src) {\n    let tokens = tokenize(src);\n    let sections = _parse(tokens);\n    return sections;\n}\nexports.parse = parse;\nfunction tokenize(src) {\n    return lexer(src);\n}\nexports.tokenize = tokenize;\nfunction _parse(tokens) {\n    let sections = [];\n    let ensureUnique = makeEnsureUnique();\n    // dup tokens\n    tokens = tokens.reverse();\n    function popToken() {\n        return tokens.pop();\n    }\n    function peekToken() {\n        if (tokens.length == 0) {\n            return null;\n        }\n        return tokens[tokens.length - 1];\n    }\n    function parseListItem() {\n        const start = popToken();\n        let children;\n        if (start.type === tk.Types.loose_item_start) {\n            // Kludgy handling of \"loose items\". The tokens returned by the lexer are messy to begin with.\n            children = parseContent(tk.Types.list_item_end, [], true).map(node => {\n                if (typeof node === \"string\") {\n                    // Add space to prevent text strings from being joined together.\n                    return `${node} `;\n                }\n                else {\n                    if (node.type === \"space\") {\n                        const newline = {\n                            type: \"newline\",\n                        };\n                        return newline;\n                    }\n                    else {\n                        return node;\n                    }\n                }\n            });\n        }\n        else {\n            children = parseContent(tk.Types.list_item_end);\n        }\n        popToken(); // list_item_end\n        return {\n            type: NodeTypes.list_item,\n            children: children\n        };\n    }\n    function parseList() {\n        // \"list_start\"\n        let { ordered } = popToken();\n        let items = [];\n        while (tokens.length > 0) {\n            let token = peekToken();\n            let { type } = token;\n            if (type === tk.Types.list_end) {\n                popToken();\n                break;\n            }\n            else if (tk.isListItemStartToken(token)) {\n                items.push(parseListItem());\n            }\n        }\n        return { type: NodeTypes.list, ordered: ordered, items: items };\n    }\n    function parseBlockQuote() {\n        popToken(); // blockquote_start\n        let children = parseContent(tk.Types.blockquote_end);\n        popToken(); // blockquote_end\n        return {\n            type: \"blockquote\",\n            children: children,\n        };\n    }\n    function parseSection() {\n        let token = peekToken();\n        let id;\n        let heading;\n        let content = [];\n        if (token.type === tk.Types.heading) {\n            let headingToken = token;\n            heading = parseHeading();\n            id = heading.id;\n            content.push(heading);\n        }\n        else {\n            id = \"_top\";\n        }\n        parseContent(ast.NodeTypes.heading, content);\n        return {\n            type: NodeTypes.section,\n            children: content,\n            id: id,\n        };\n    }\n    function parseHeading() {\n        let token = tokens.pop();\n        let id = ensureUnique(token.text);\n        return {\n            id: id,\n            type: ast.NodeTypes.heading,\n            depth: token.depth,\n            text: token.text,\n        };\n    }\n    function parseParagraph() {\n        let token = tokens.pop();\n        return {\n            type: \"paragraph\",\n            children: inline_1.parseInline(token.text),\n        };\n    }\n    // Treat uppercase HTML tags as components. Parse text content recursively.\n    function parseComponent() {\n        const { text } = tokens.pop();\n        const [doc, _] = parseXMLHeredoc_1.parseXMLHeredoc(text);\n        const { tag, attrs, content } = doc;\n        const node = {\n            type: \"jsx\",\n            name: tag,\n            attrs: attrs,\n        };\n        if (content) {\n            node.sections = parse(content);\n        }\n        return node;\n    }\n    function parseContent(endType, content = [], preserveSpace = false) {\n        // let content: Node[] = [];\n        while (true) {\n            let token = peekToken();\n            if (token == null) {\n                return content;\n            }\n            if (token.type == endType) {\n                return content;\n            }\n            // Get rid of space, except when it matters (list items...)\n            if (token.type === \"space\" && !preserveSpace) {\n                tokens.pop();\n                continue;\n            }\n            if (tk.isListStartToken(token)) {\n                content.push(parseList());\n            }\n            else if (tk.isText(token)) {\n                tokens.pop();\n                let children = inline_1.parseInline(token.text);\n                content.push(...children);\n            }\n            else if (token.type === tk.Types.paragraph) {\n                content.push(parseParagraph());\n            }\n            else if (token.type === tk.Types.heading) {\n                content.push(parseHeading());\n            }\n            else if (token.type === tk.Types.blockquote_start) {\n                content.push(parseBlockQuote());\n            }\n            else if (token.type === tk.Types.html) {\n                const { text } = token;\n                if (text.match(/^<[A-Z]/)) {\n                    // treat uppercase tags as components\n                    content.push(parseComponent());\n                }\n                else {\n                    // normal html node\n                    content.push(tokens.pop());\n                }\n            }\n            else {\n                content.push(tokens.pop());\n            }\n        }\n    }\n    while (tokens.length > 0) {\n        sections.push(parseSection());\n    }\n    // createSection();\n    return sections;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./parser.ts\n **/","module.exports = require(\"marked\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"marked\"\n ** module id = 10\n ** module chunks = 1\n **/","\"use strict\";\n// let {kebabCase} = require(\"lodash\");\nconst lodash_1 = require(\"lodash\");\nfunction makeEnsureUnique() {\n    let ids = {};\n    return function ensureUnique(str) {\n        let id = lodash_1.kebabCase(str);\n        let i = 1;\n        while (true) {\n            let tryId = id;\n            if (i != 1) {\n                tryId = `${tryId}_${i}`;\n            }\n            if (ids[tryId] == null) {\n                id = tryId;\n                ids[id] = true;\n                break;\n            }\n            i++;\n        }\n        return id;\n    };\n}\nexports.makeEnsureUnique = makeEnsureUnique;\nfunction pp(obj) {\n    console.log(JSON.stringify(obj, undefined, 2));\n    return obj;\n}\nexports.pp = pp;\nfunction hashCode(str) {\n    if (str == null || str.charCodeAt == null) {\n        return 0;\n    }\n    var hash = 0, i, chr, len;\n    if (str.length == 0)\n        return hash;\n    for (i = 0, len = str.length; i < len; i++) {\n        chr = str.charCodeAt(i);\n        hash = ((hash << 5) - hash) + chr;\n        hash |= 0; // Convert to 32bit integer\n    }\n    return hash;\n}\nexports.hashCode = hashCode;\n;\n\n\n\n/** WEBPACK FOOTER **\n ** ./utils.ts\n **/","module.exports = require(\"lodash\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"lodash\"\n ** module id = 12\n ** module chunks = 1\n **/","// Abstract Sytnax Tree for Markdown Document\n\"use strict\";\nexports.NodeTypes = {\n    document: \"document\",\n    heading: \"heading\",\n    section: \"section\",\n    list: \"list\",\n    list_item: \"list-item\",\n    paragraph: \"paragraph\",\n    code: \"code\",\n    html: \"html\",\n    jsx: \"jsx\",\n    i18n: \"i18n\",\n    blockquote: \"blockquote\",\n    newline: \"newline\",\n};\nfunction isIdNode(o) {\n    return o.id != null;\n}\nexports.isIdNode = isIdNode;\nfunction isTextNode(o) {\n    return o.text != null;\n}\nexports.isTextNode = isTextNode;\n;\nfunction isListItem(o) {\n    return o.type == exports.NodeTypes.list_item;\n}\nexports.isListItem = isListItem;\nfunction isList(o) {\n    return o.type == exports.NodeTypes.list;\n}\nexports.isList = isList;\n\n\n\n/** WEBPACK FOOTER **\n ** ./ast.ts\n **/","// The objects returned by marked lexer.\n\"use strict\";\nexports.Types = {\n    heading: \"heading\",\n    list_start: \"list_start\",\n    list_end: \"list_end\",\n    paragraph: \"paragraph\",\n    list_item_start: \"list_item_start\",\n    loose_item_start: \"loose_item_start\",\n    list_item_end: \"list_item_end\",\n    blockquote_start: \"blockquote_start\",\n    blockquote_end: \"blockquote_end\",\n    html: \"html\",\n    text: \"text\",\n};\nfunction isText(t) {\n    return t.type === exports.Types.text;\n}\nexports.isText = isText;\nfunction isListStartToken(token) {\n    return token.type == exports.Types.list_start;\n}\nexports.isListStartToken = isListStartToken;\nfunction isListItemStartToken(token) {\n    return token.type == exports.Types.list_item_start || token.type == exports.Types.loose_item_start;\n}\nexports.isListItemStartToken = isListItemStartToken;\n\n\n\n/** WEBPACK FOOTER **\n ** ./token.ts\n **/","\"use strict\";\nconst marked = require(\"marked\");\nconst options = Object.assign(marked.defaults, { xhtml: true });\nconst inlineLexer = new marked.InlineLexer([], options);\nconst parseXMLHeredoc_1 = require(\"./parseXMLHeredoc\");\nconst parser_1 = require(\"./parser\");\ninlineLexer.outputAST = outputAST;\nfunction parseInline(src) {\n    return inlineLexer.outputAST(src);\n}\nexports.parseInline = parseInline;\nfunction outputAST(src) {\n    var items = [];\n    var out = '';\n    var link, text, href, cap;\n    function pushTextItem() {\n        items.push(out);\n        out = \"\";\n    }\n    function pushNode(node) {\n        pushTextItem();\n        items.push(node);\n    }\n    while (src) {\n        // escape\n        if (cap = this.rules.escape.exec(src)) {\n            src = src.substring(cap[0].length);\n            out += cap[1];\n            continue;\n        }\n        // autolink\n        // if (cap = this.rules.autolink.exec(src)) {\n        //   src = src.substring(cap[0].length);\n        //   if (cap[2] === '@') {\n        //     text = cap[1].charAt(6) === ':'\n        //       ? this.mangle(cap[1].substring(7))\n        //       : this.mangle(cap[1]);\n        //     href = this.mangle('mailto:') + text;\n        //   } else {\n        //     text = escape(cap[1]);\n        //     href = text;\n        //   }\n        //   out += this.renderer.link(href, null, text);\n        //   continue;\n        // }\n        // // url (gfm)\n        // if (!this.inLink && (cap = this.rules.url.exec(src))) {\n        //   src = src.substring(cap[0].length);\n        //   text = escape(cap[1]);\n        //   href = text;\n        //   out += this.renderer.link(href, null, text);\n        //   continue;\n        // }\n        // // tag\n        // if (cap = this.rules.tag.exec(src)) {\n        //   if (!this.inLink && /^<a /i.test(cap[0])) {\n        //     this.inLink = true;\n        //   } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n        //     this.inLink = false;\n        //   }\n        //   src = src.substring(cap[0].length);\n        //   out += this.options.sanitize\n        //     ? this.options.sanitizer\n        //       ? this.options.sanitizer(cap[0])\n        //       : escape(cap[0])\n        //     : cap[0]\n        //   continue;\n        // }\n        if (cap = this.rules.tag.exec(src)) {\n            const [result, remainder] = parseXMLHeredoc_1.parseXMLHeredoc(src);\n            src = remainder;\n            const firstLetter = result.tag.charAt(0);\n            const isTagFirstLetterUppercase = firstLetter.toUpperCase() == firstLetter;\n            if (!isTagFirstLetterUppercase) {\n                const node = {\n                    type: \"html\",\n                    pre: false,\n                    text: result.raw,\n                };\n                pushNode(node);\n            }\n            else {\n                const node = {\n                    type: \"jsx\",\n                    name: result.tag,\n                    attrs: result.attrs,\n                    sections: parser_1.parse(result.content),\n                };\n                pushNode(node);\n            }\n            continue;\n        }\n        // // link\n        // if (cap = this.rules.link.exec(src)) {\n        //   src = src.substring(cap[0].length);\n        //   this.inLink = true;\n        //   out += this.outputLink(cap, {\n        //     href: cap[2],\n        //     title: cap[3]\n        //   });\n        //   this.inLink = false;\n        //   continue;\n        // }\n        // link\n        if (cap = this.rules.link.exec(src)) {\n            src = src.substring(cap[0].length);\n            const [_, caption, href, title] = cap;\n            if (cap[0].charAt(0) === \"!\") {\n                let node = {\n                    type: \"image\",\n                    caption: caption,\n                    href: href,\n                };\n                if (title) {\n                    node.title = title;\n                }\n                pushNode(node);\n            }\n            else {\n                let node = {\n                    type: \"link\",\n                    caption: caption,\n                    href: href,\n                };\n                if (title) {\n                    node.title = title;\n                }\n                pushNode(node);\n            }\n            continue;\n        }\n        // // reflink, nolink\n        // if ((cap = this.rules.reflink.exec(src))\n        //     || (cap = this.rules.nolink.exec(src))) {\n        //   src = src.substring(cap[0].length);\n        //   link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        //   link = this.links[link.toLowerCase()];\n        //   if (!link || !link.href) {\n        //     out += cap[0].charAt(0);\n        //     src = cap[0].substring(1) + src;\n        //     continue;\n        //   }\n        //   this.inLink = true;\n        //   out += this.outputLink(cap, link);\n        //   this.inLink = false;\n        //   continue;\n        // }\n        // // strong\n        // if (cap = this.rules.strong.exec(src)) {\n        //   src = src.substring(cap[0].length);\n        //   out += this.renderer.strong(this.output(cap[2] || cap[1]));\n        //   continue;\n        // }\n        // strong\n        if (cap = this.rules.strong.exec(src)) {\n            src = src.substring(cap[0].length);\n            let node = {\n                type: \"strong\",\n                text: cap[2] || cap[1],\n            };\n            pushNode(node);\n            continue;\n        }\n        // // em\n        // if (cap = this.rules.em.exec(src)) {\n        //   src = src.substring(cap[0].length);\n        //   out += this.renderer.em(this.output(cap[2] || cap[1]));\n        //   continue;\n        // }\n        if (cap = this.rules.em.exec(src)) {\n            src = src.substring(cap[0].length);\n            let node = {\n                type: \"emphasis\",\n                text: cap[2] || cap[1],\n            };\n            pushNode(node);\n            continue;\n        }\n        // code\n        // if (cap = this.rules.code.exec(src)) {\n        //   src = src.substring(cap[0].length);\n        //   out += this.renderer.codespan(escape(cap[2], true));\n        //   continue;\n        // }\n        // code\n        if (cap = this.rules.code.exec(src)) {\n            src = src.substring(cap[0].length);\n            let node = {\n                type: \"inline-code\",\n                text: cap[2],\n            };\n            pushNode(node);\n            continue;\n        }\n        // // br\n        // if (cap = this.rules.br.exec(src)) {\n        //   src = src.substring(cap[0].length);\n        //   out += this.renderer.br();\n        //   continue;\n        // }\n        // // del (gfm)\n        // if (cap = this.rules.del.exec(src)) {\n        //   src = src.substring(cap[0].length);\n        //   out += this.renderer.del(this.output(cap[1]));\n        //   continue;\n        // }\n        // Accmulate into string.\n        if (cap = this.rules.text.exec(src)) {\n            src = src.substring(cap[0].length);\n            // out += this.renderer.text(escape(this.smartypants(cap[0])));\n            out += cap[0];\n            continue;\n        }\n        if (src) {\n            throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n        }\n    }\n    if (out != \"\") {\n        pushTextItem();\n    }\n    return items;\n    // return out;\n}\n;\nfunction escape(html, encode) {\n    return html\n        .replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#39;');\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./inline.ts\n **/"],"sourceRoot":""}